#!/usr/bin/env node

'use strict';

const path = require('path');
const workerpool = require('workerpool');
const yargs = require('yargs');

main().catch(console.error);

async function main() {
  yargs
    .help('help', 'Show help.')
    .option('nosend', {
      describe: 'Do not send metrics.',
    })
    .option('pipelineJs', {
      describe: 'Path to the pipeline.',
      alias: 'p',
      default: './pipelines/reference.js',
    })
    .option('name', {
      describe: 'The test display name in Prometheus.',
      alias: 'n',
      demandOption: true
    })
    .options('failures', {
      describe: 'Number of byzantine failures to protect against.',
      alias: 'm',
      default: 7,
    });

  const {nosend, pipelineJs, name, failures} = yargs.argv;
  const run = Date.now();

  const simulationPool = workerpool.pool(
    path.join(__dirname, 'simulation-worker.js'));

  setInterval(() => {
    console.log('WORKERPOOL STATUS', simulationPool.stats());
  }, 3000);

  const promises = [];
  for(let f = 1; f <= failures; f++) {
    const simulationOptions = {
      nosend,
      pipelineJs,
      user: name,
      run,
      witnessCount: (3 * f) + 1
    };
    promises.push(simulationPool.exec('runSimulation', [simulationOptions]));
  }

  await Promise.all(promises);

  simulationPool.terminate();
}
